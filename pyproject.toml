[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.pyright]
root = "./"
include = ['./sratch_models',]
pythonVersion = "3.10"
pythonPlatform = "All"
reportMissingParameterType = true

# TODO: switch fully to this config: https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
# TODO: build a light version with basic support for reading, writing (only libs that run on beaglebone)

[tool.ruff]  # TODO: once stable it replaces flake8, pyupgrade, isort, ...
line-length = 100
select = [
    "A",    # flake8-builtins
    "ANN", # flake8-annotations
    "ARG",  # flake8-unused-arguments
    "B",    # Bugbear
    "C",
    "COM", # flake8-commas
#    "CPY",  # flake8-copyright
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
#    "D",    # pydocstyle, TODO: activate
    "E",    # pycodestyle errors
    "ERA",  # eradicate commented out code
    "F",    # pyflakes
#    "FA",   # flake8-future-annotations
#    "FBT",  # boolean traps
    "FLY",  # flynt
    "FURB", # refurb
    "G",    # flake8-logging-format
#    "I",    # incomplete isort
    "INP",  # flake8-no-pep420
    "LOG",  # flake8-logging
    "N",    # naming
    "NPY",  # NumPy-specific rules
    "PD",   # pandas-vet
    "PERF", # Perflint
    "PL",   # Pylint
    "PTH",  # flake8-use-pathlib
    "PYI",  # flake8-pyi
    "RET",  # flake8-return
    "RUF",  # Ruff-specific rules
    "S",    # bandit, security
    "SLF",  # flake8-self
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "T10",  # flake8-print
    "UP",   # pyupgrade
    "W",    # pycodestyle warnings
    "YTT",  # flake8-2020
]
ignore = [
#    "N802", "N803", "N806", "N815", "N816", # naming (si-units should stay)
    "PLR2004", # magic values
#    "TID252", # relative imports from parent
#    "RUF100", # noqa from other linters, TODO: replace flake8, when security is fully ported (S4**)
#    "PLR0904", # complexity
#    "PLR0911", "PLR0912", # complexity
#    "PLR0913", "PLR0915", # complexity
#    "C901", # complexity
#    "E203", # whitespace before ':' (black-default)
#    "ANN101", "ANN102", # self & cls not type-annotated
#    "ANN401",  # Any as valid type
#    "COM812", # trailing comma, same line
]
target-version = "py310"
preview = true


[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
